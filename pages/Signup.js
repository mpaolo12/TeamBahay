import styles from "../components/Signupform.module.css";
import Head from 'next/head'
import Lower from "../components/Lower";
// import { useForm } from "react-hook-form";
// import React from 'react';
// import { ToastContainer, toast } from 'react-toastify';
// import 'react-toastify/dist/ReactToastify.css';
import React, {useState } from 'react'
import Axios from 'axios' 
// import Image from 'next/image'

export default function App() {
  const [regUser, setUser] = useState('')
  const [regEmail, setEmail] = useState('')
  const [regPass, setPass] = useState('')
  const [regRepass, setRepass] = useState('')
  const signup = () =>{
    if(regUser=="" || regEmail=="" || regPass==""){
      Swal.fire({
        icon: 'error',
        title: 'Please fill up the necessary information needed',
        confirmButtonColor: '#3085d6',
        confirmButtonText: 'Okay'
        }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = "Signup";
            }else{
                window.location.href = "Signup";
            }
        })
    }else if(regPass != regRepass){
      Swal.fire({
        icon: 'warning',
        title: 'Password does not match',
        confirmButtonColor: '#3085d6',
        confirmButtonText: 'Okay'
        }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = "Signup";
            }
        })
    }
    else{
      Axios.post('http://localhost:2023/insert',{
        username: regUser, 
        email: regEmail, 
        password: regPass,
        repass: regRepass,
      }).then((response)=>{
        if (response.data.message == 'Successfully Registered'){
          // window.location.href='/Signup';
          // console.log(response);
          // window.location.href = "Signup";

          Swal.fire({
            icon: 'success',
            title: 'Successfully Registered',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'Okay'
            }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/Signup";
                console.log(response);
              }
            })
        } else if (response.data.message == 'User already exists'){
          Swal.fire({
            icon: 'warning',
            title: 'User already exists',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'Okay'
            }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/Signup";
                console.log(response);
              }
            })
        }
     
      })
    }
  };
  
   
  return (
    <>
    <Head>
        <title>Sign-up</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
        <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      </Head>
    <div className={styles.container}>
        {/* <div className={styles.kahon}>
          <form className={styles.Changepasscode}>
              <label htmlFor="oldpin">Username:  </label><br></br>
              <input type="text" onChange={(e)=>{setUser(e.target.value);}} id="typeUsernameX" className="form-control form-control-lg" placeholder='Enter Username' required /><br/>
              <label htmlFor="email">Email:  </label><br></br>
              <input type="email" onChange={(e)=>{setEmail(e.target.value);}} id="typeEmailX" className="form-control form-control-lg" placeholder='Enter Email' required /><br/>
              <label htmlFor="newpin">Password:  </label><br></br>
              <input type="password" onChange={(e)=>{setPass(e.target.value);}} id="typePasswordX" className="form-control form-control-lg" placeholder='Enter Password' required /><br/>
              <label htmlFor="rnewpin">Re-type Password:  </label><br></br>
              <input type="password" onChange={(e)=>{setRepass(e.target.value);}} id="typePasswordreX" className="form-control form-control-lg" placeholder='Retype Password' required /><br/>
              <button className="btn btn-primary text-gray btn-outline-dark ml-5 btn-lg px-5" onClick={signup} type="submit">Signup</button>
              <br/>
              <br/>
              <div>
                <p className="mb-0">Already have an account? <a href="/Signin" className="text-gray-50 fw-bold">Login</a>
                </p>
              </div>
              
          </form>
        </div> */}


        <div className="container py-8 h-100">
          <div className="row d-flex justify-content-center align-items-center h-100">
            <div className="col-12 col-md-12 col-lg-12 col-xl-7">
              <div className="card bg-gradient bg-primary text-white">
                <div className="card-body p-5 ">

                  <div className="mb-md-5 mt-md-4 pb-5">

                    <div className="text-center">
                      <h2 className="fw-bold mb-2 text-uppercase">Sign-up</h2>
                      <p className="text-white-50 mb-5">Please enter your username and password   </p>
                    </div>
                    


                    {/* <h3 className='text-danger'>{logStatuseErr}</h3> */}
                    <label htmlFor="oldpin">Username:  </label><br></br>
                    <input type="text" onChange={(e) => { setUser(e.target.value); }} id="typeUsernameX" className="form-control form-control-lg" placeholder='Enter Username' required /><br />
                    <label htmlFor="email">Email:  </label><br></br>
                    <input type="email" onChange={(e) => { setEmail(e.target.value); }} id="typeEmailX" className="form-control form-control-lg" placeholder='Enter Email' required /><br />
                    <label htmlFor="newpin">Password:  </label><br></br>
                    <input type="password" onChange={(e) => { setPass(e.target.value); }} id="typePasswordX" className="form-control form-control-lg" placeholder='Enter Password' required /><br />
                    <label htmlFor="rnewpin">Re-type Password:  </label><br></br>
                    <input type="password" onChange={(e) => { setRepass(e.target.value); }} id="typePasswordreX" className="form-control form-control-lg" placeholder='Retype Password' required /><br />
                    
                    <div className="row d-flex justify-content-center align-items-center h-100 p-3">
                      <button className="btn btn-outline-light btn-lg px-5" onClick={signup} type="submit">Signup</button>
                    </div>
                    
                    <div className="text-center pt-5">
                      <p className="mb-0">Already have an account? <a href="/Signin" className="text-white-50 fw-bold">Log-in</a>
                      </p>
                    </div>
                  </div>

                  

                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    <Lower/>
    </>
  );
}


